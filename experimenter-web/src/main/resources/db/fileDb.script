SET DATABASE UNIQUE NAME HSQLDB39FC1FD133
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL DOUBLE NAN TRUE
SET DATABASE SQL LONGVAR IS LOB FALSE
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON DEADLOCK TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET FILES WRITE DELAY 500 MILLIS
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 8
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
ALTER USER SA SET LOCAL TRUE
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE SEQUENCE PUBLIC.SEQ_USER AS INTEGER START WITH 100
CREATE SEQUENCE PUBLIC.SEQ_USERGROUP AS INTEGER START WITH 100
CREATE SEQUENCE PUBLIC.SEQ_COMPUTER AS INTEGER START WITH 100
CREATE SEQUENCE PUBLIC.SEQ_CONNECTION AS INTEGER START WITH 100
CREATE SEQUENCE PUBLIC.SEQ_EXPERIMENT AS INTEGER START WITH 100
CREATE SEQUENCE PUBLIC.SEQ_PROJECT AS INTEGER START WITH 100
CREATE SEQUENCE PUBLIC.SEQ_INPUT AS INTEGER START WITH 100
CREATE SEQUENCE PUBLIC.SEQ_INPUT_SET AS INTEGER START WITH 100
CREATE SEQUENCE PUBLIC.SEQ_APPLICATION AS INTEGER START WITH 100
CREATE SEQUENCE PUBLIC.SEQ_PROGRAM AS INTEGER START WITH 100
CREATE SEQUENCE PUBLIC.SEQ_PROBLEM AS INTEGER START WITH 100
CREATE SEQUENCE PUBLIC.SEQ_FARM AS INTEGER START WITH 100
CREATE MEMORY TABLE PUBLIC.USER(USER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(60) NOT NULL,SURNAME VARCHAR(60) NOT NULL,LOGIN VARCHAR(60) NOT NULL,PASSWORD VARCHAR(100) NOT NULL,EMAIL VARCHAR(60) DEFAULT NULL)
ALTER TABLE PUBLIC.USER ALTER COLUMN USER_ID RESTART WITH 6
CREATE MEMORY TABLE PUBLIC.COMPUTER(COMPUTER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,ADDRESS VARCHAR(60) NOT NULL,DESCRIPTION VARCHAR(100) DEFAULT NULL)
ALTER TABLE PUBLIC.COMPUTER ALTER COLUMN COMPUTER_ID RESTART WITH 6
CREATE MEMORY TABLE PUBLIC.CONNECTION(CONNECTION_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(60) NOT NULL,LOGIN VARCHAR(60) NOT NULL,PASSWORD VARCHAR(60) NOT NULL,DESCRIPTION VARCHAR(100) DEFAULT NULL,COMPUTER_ID INTEGER NOT NULL,PORT INTEGER DEFAULT NULL,FARM_ID INTEGER NOT NULL,FOREIGN KEY(COMPUTER_ID) REFERENCES PUBLIC.COMPUTER(COMPUTER_ID))
ALTER TABLE PUBLIC.CONNECTION ALTER COLUMN CONNECTION_ID RESTART WITH 7
CREATE MEMORY TABLE PUBLIC.USERGROUP(USERGROUP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(60) NOT NULL)
ALTER TABLE PUBLIC.USERGROUP ALTER COLUMN USERGROUP_ID RESTART WITH 7
CREATE MEMORY TABLE PUBLIC.USER_USERGROUP(USER_ID INTEGER NOT NULL,USERGROUP_ID INTEGER NOT NULL,PRIMARY KEY(USER_ID,USERGROUP_ID),FOREIGN KEY(USER_ID) REFERENCES PUBLIC.USER(USER_ID),FOREIGN KEY(USERGROUP_ID) REFERENCES PUBLIC.USERGROUP(USERGROUP_ID))
CREATE MEMORY TABLE PUBLIC.FARM(FARM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(60) NOT NULL,DESCRIPTION VARCHAR(100) DEFAULT NULL,USERGROUP_ID INTEGER NOT NULL,FOREIGN KEY(USERGROUP_ID) REFERENCES PUBLIC.USERGROUP(USERGROUP_ID))
ALTER TABLE PUBLIC.FARM ALTER COLUMN FARM_ID RESTART WITH 6
CREATE MEMORY TABLE PUBLIC.PROGRAM(PROGRAM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(60) DEFAULT NULL,DESCRIPTION VARCHAR(100) DEFAULT NULL,COMMAND VARCHAR(60) NOT NULL,PROJECT_ID INTEGER NOT NULL)
ALTER TABLE PUBLIC.PROGRAM ALTER COLUMN PROGRAM_ID RESTART WITH 6
CREATE MEMORY TABLE PUBLIC.APPLICATION(APPLICATION_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,VERSION VARCHAR(60) NOT NULL,EXECUTABLE VARCHAR(255) NOT NULL,PROGRAM_ID INTEGER NOT NULL,FOREIGN KEY(PROGRAM_ID) REFERENCES PUBLIC.PROGRAM(PROGRAM_ID))
ALTER TABLE PUBLIC.APPLICATION ALTER COLUMN APPLICATION_ID RESTART WITH 6
CREATE MEMORY TABLE PUBLIC.PROBLEM(PROBLEM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(60) NOT NULL,DESCRIPTION VARCHAR(100) DEFAULT NULL)
ALTER TABLE PUBLIC.PROBLEM ALTER COLUMN PROBLEM_ID RESTART WITH 6
CREATE MEMORY TABLE PUBLIC.INPUT(INPUT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(60) NOT NULL,DATA VARCHAR(255) NOT NULL,PROBLEM_ID INTEGER NOT NULL,FOREIGN KEY(PROBLEM_ID) REFERENCES PUBLIC.PROBLEM(PROBLEM_ID))
ALTER TABLE PUBLIC.INPUT ALTER COLUMN INPUT_ID RESTART WITH 6
CREATE MEMORY TABLE PUBLIC.EXPERIMENT(EXPERIMENT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(60) NOT NULL,DESCRIPTION VARCHAR(100) DEFAULT NULL,CRON_EXPRESSION VARCHAR(60) DEFAULT NULL,ACTIVE BOOLEAN DEFAULT FALSE,APPLICATION_ID INTEGER NOT NULL,CONSTRAINT EXPERIMENT_ACTIVE_CRON_NOT_NULL CHECK((PUBLIC.EXPERIMENT.ACTIVE=FALSE) OR ((PUBLIC.EXPERIMENT.ACTIVE=TRUE) AND (PUBLIC.EXPERIMENT.CRON_EXPRESSION IS NOT NULL))),FOREIGN KEY(APPLICATION_ID) REFERENCES PUBLIC.APPLICATION(APPLICATION_ID))
ALTER TABLE PUBLIC.EXPERIMENT ALTER COLUMN EXPERIMENT_ID RESTART WITH 7
CREATE MEMORY TABLE PUBLIC.PROJECT(PROJECT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(60) NOT NULL,DESCRIPTION VARCHAR(100) DEFAULT NULL,PROBLEM_ID INTEGER NOT NULL,USERGROUP_ID INTEGER NOT NULL,FOREIGN KEY(PROBLEM_ID) REFERENCES PUBLIC.PROBLEM(PROBLEM_ID),FOREIGN KEY(USERGROUP_ID) REFERENCES PUBLIC.USERGROUP(USERGROUP_ID))
ALTER TABLE PUBLIC.PROJECT ALTER COLUMN PROJECT_ID RESTART WITH 8
CREATE MEMORY TABLE PUBLIC.EXPERIMENT_INPUT_SET(INPUT_SET_ID INTEGER NOT NULL,EXPERIMENT_ID INTEGER NOT NULL,PRIMARY KEY(INPUT_SET_ID,EXPERIMENT_ID),FOREIGN KEY(EXPERIMENT_ID) REFERENCES PUBLIC.EXPERIMENT(EXPERIMENT_ID))
CREATE MEMORY TABLE PUBLIC.PROJECT_INPUT_SET(INPUT_SET_ID INTEGER NOT NULL,PROJECT_ID INTEGER NOT NULL,PRIMARY KEY(INPUT_SET_ID,PROJECT_ID),FOREIGN KEY(PROJECT_ID) REFERENCES PUBLIC.PROJECT(PROJECT_ID))
CREATE MEMORY TABLE PUBLIC.INPUT_SET(INPUT_SET_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(60) NOT NULL,DESCRIPTION VARCHAR(100) DEFAULT NULL,PROBLEM_ID INTEGER NOT NULL,FOREIGN KEY(PROBLEM_ID) REFERENCES PUBLIC.PROBLEM(PROBLEM_ID))
ALTER TABLE PUBLIC.INPUT_SET ALTER COLUMN INPUT_SET_ID RESTART WITH 7
CREATE MEMORY TABLE PUBLIC.INPUT_INPUT_SET(INPUT_ID INTEGER NOT NULL,INPUT_SET_ID INTEGER NOT NULL,PRIMARY KEY(INPUT_ID,INPUT_SET_ID),FOREIGN KEY(INPUT_ID) REFERENCES PUBLIC.INPUT(INPUT_ID),FOREIGN KEY(INPUT_SET_ID) REFERENCES PUBLIC.INPUT_SET(INPUT_SET_ID))
CREATE MEMORY TABLE PUBLIC.EXPERIMENT_FARM(EXPERIMENT_ID INTEGER NOT NULL,FARM_ID INTEGER NOT NULL,PRIMARY KEY(EXPERIMENT_ID,FARM_ID),FOREIGN KEY(EXPERIMENT_ID) REFERENCES PUBLIC.EXPERIMENT(EXPERIMENT_ID),FOREIGN KEY(FARM_ID) REFERENCES PUBLIC.FARM(FARM_ID))
ALTER TABLE PUBLIC.CONNECTION ADD FOREIGN KEY(FARM_ID) REFERENCES PUBLIC.FARM(FARM_ID)
ALTER TABLE PUBLIC.PROGRAM ADD FOREIGN KEY(PROJECT_ID) REFERENCES PUBLIC.PROJECT(PROJECT_ID)
ALTER TABLE PUBLIC.EXPERIMENT_INPUT_SET ADD FOREIGN KEY(INPUT_SET_ID) REFERENCES PUBLIC.INPUT_SET(INPUT_SET_ID)
ALTER TABLE PUBLIC.PROJECT_INPUT_SET ADD FOREIGN KEY(INPUT_SET_ID) REFERENCES PUBLIC.INPUT_SET(INPUT_SET_ID)
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
ALTER SEQUENCE PUBLIC.SEQ_USER RESTART WITH 100
ALTER SEQUENCE PUBLIC.SEQ_USERGROUP RESTART WITH 100
ALTER SEQUENCE PUBLIC.SEQ_COMPUTER RESTART WITH 100
ALTER SEQUENCE PUBLIC.SEQ_CONNECTION RESTART WITH 100
ALTER SEQUENCE PUBLIC.SEQ_EXPERIMENT RESTART WITH 100
ALTER SEQUENCE PUBLIC.SEQ_PROJECT RESTART WITH 100
ALTER SEQUENCE PUBLIC.SEQ_INPUT RESTART WITH 100
ALTER SEQUENCE PUBLIC.SEQ_INPUT_SET RESTART WITH 100
ALTER SEQUENCE PUBLIC.SEQ_APPLICATION RESTART WITH 100
ALTER SEQUENCE PUBLIC.SEQ_PROGRAM RESTART WITH 100
ALTER SEQUENCE PUBLIC.SEQ_PROBLEM RESTART WITH 100
ALTER SEQUENCE PUBLIC.SEQ_FARM RESTART WITH 100
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT DBA TO SA
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
SET SCHEMA PUBLIC
INSERT INTO USER VALUES(1,'Tester1','Exists','tester1','heslo','tester1@experimenter.org')
INSERT INTO USER VALUES(2,'Tester2','Delete','tester2','heslo','tester2@experimenter.org')
INSERT INTO USER VALUES(3,'Tester3','Update','tester3','heslo','tester3@experimenter.org')
INSERT INTO USER VALUES(4,'Tester4','AddToGroup','tester4','heslo','tester4@experimenter.org')
INSERT INTO USER VALUES(5,'Tester5','RemoveFromGroup','tester5','heslo','tester5@experimenter.org')
INSERT INTO COMPUTER VALUES(1,'u-pl20','computer u-pl20, test exists')
INSERT INTO COMPUTER VALUES(2,'u-pl21','computer u-pl21, test delete')
INSERT INTO COMPUTER VALUES(3,'u-pl22','computer u-pl22')
INSERT INTO COMPUTER VALUES(4,'u-pl22','computer u-pl23 has dependent connection')
INSERT INTO COMPUTER VALUES(5,'localhost','testovaci')
INSERT INTO CONNECTION VALUES(1,'myConn1exists','test','test123','my test connection 1',1,221,1)
INSERT INTO CONNECTION VALUES(2,'myConn2delete','comp','comp123','my test connection 2',3,221,1)
INSERT INTO CONNECTION VALUES(3,'myConn3update','upd','upd123','my test connection 3',1,221,1)
INSERT INTO CONNECTION VALUES(4,'myConn4del','upd','upd123','dependent on farm and computer',4,221,4)
INSERT INTO CONNECTION VALUES(6,'local','jfaryad','xxx','testovaci',5,22,5)
INSERT INTO USERGROUP VALUES(1,'students')
INSERT INTO USERGROUP VALUES(2,'teachers')
INSERT INTO USERGROUP VALUES(3,'public')
INSERT INTO USERGROUP VALUES(4,'delete-group')
INSERT INTO USERGROUP VALUES(5,'remove-group')
INSERT INTO USERGROUP VALUES(6,'bcTest')
INSERT INTO USER_USERGROUP VALUES(1,1)
INSERT INTO USER_USERGROUP VALUES(2,4)
INSERT INTO USER_USERGROUP VALUES(5,5)
INSERT INTO FARM VALUES(1,'testFarm1','farm to test find',1)
INSERT INTO FARM VALUES(2,'testFarm2','farm to test delete',1)
INSERT INTO FARM VALUES(3,'testFarm3','farm to test update',3)
INSERT INTO FARM VALUES(4,'testFarm4','dependent on user group, has dependent connection',5)
INSERT INTO FARM VALUES(5,'bcFarma','testovacia',6)
INSERT INTO PROGRAM VALUES(1,'solver1','program to test find','solver1.sh run',1)
INSERT INTO PROGRAM VALUES(2,'solver2','program to test delete','solver2.sh run',1)
INSERT INTO PROGRAM VALUES(3,'solver3','program to test update','solver3.sh run',1)
INSERT INTO PROGRAM VALUES(4,'solver4','dependent on project','solver4sh run',6)
INSERT INTO PROGRAM VALUES(5,'bcProgram','tralala','cp /tmp/dst.txt /tmp/vysledok.txt',7)
INSERT INTO APPLICATION VALUES(1,'1.3','solver1_1.3.sh run',1)
INSERT INTO APPLICATION VALUES(2,'1.4','solver1_1.4.sh run',1)
INSERT INTO APPLICATION VALUES(3,'1.5','solver1_1.5.sh run',1)
INSERT INTO APPLICATION VALUES(4,'1.2','dependent on program',4)
INSERT INTO APPLICATION VALUES(5,'2.0','/home/jfaryad/expstore/executables/7/5/2.0/testApp.sh',5)
INSERT INTO PROBLEM VALUES(1,'3-SAT','you know what it means')
INSERT INTO PROBLEM VALUES(2,'4-SAT','yeah, right...')
INSERT INTO PROBLEM VALUES(3,'testDelete','i will be deleted')
INSERT INTO PROBLEM VALUES(4,'testDep','i have dependencies')
INSERT INTO PROBLEM VALUES(5,'test','blabla')
INSERT INTO INPUT VALUES(1,'testInput1','data1',1)
INSERT INTO INPUT VALUES(2,'testInput2','data2',1)
INSERT INTO INPUT VALUES(3,'testInput3','data3',2)
INSERT INTO INPUT VALUES(4,'testInput4','dependent on problem',4)
INSERT INTO INPUT VALUES(5,'bcTest','/home/jfaryad/expstore/input/5/input.zip',5)
INSERT INTO EXPERIMENT VALUES(1,'experiment1','experiment to test find','00 32 13 * * ?',FALSE,1)
INSERT INTO EXPERIMENT VALUES(2,'experiment2','experiment to test delete','0/10 * * * * ?',FALSE,2)
INSERT INTO EXPERIMENT VALUES(3,'experiment3','experiment to test update','0/10 * * * * ?',FALSE,3)
INSERT INTO EXPERIMENT VALUES(4,'experiment4','experiment to remove input set from','0/10 * * * * ?',FALSE,2)
INSERT INTO EXPERIMENT VALUES(5,'experiment5','dependent on application','0/10 * * * * ?',FALSE,4)
INSERT INTO EXPERIMENT VALUES(6,'bcExp','test','00 38 16 * * ?',TRUE,5)
INSERT INTO PROJECT VALUES(1,'testProject1','first project',1,1)
INSERT INTO PROJECT VALUES(2,'testProject2','project to test delete',2,5)
INSERT INTO PROJECT VALUES(3,'testProject3','project to test update',1,1)
INSERT INTO PROJECT VALUES(4,'testProject4','project to add input set',2,1)
INSERT INTO PROJECT VALUES(5,'testProject5','project to remove input set',2,1)
INSERT INTO PROJECT VALUES(6,'testProject6','dependent on user group and problem',4,5)
INSERT INTO PROJECT VALUES(7,'bcProblem','testovaci',5,6)
INSERT INTO EXPERIMENT_INPUT_SET VALUES(1,1)
INSERT INTO EXPERIMENT_INPUT_SET VALUES(4,4)
INSERT INTO EXPERIMENT_INPUT_SET VALUES(6,6)
INSERT INTO PROJECT_INPUT_SET VALUES(1,1)
INSERT INTO PROJECT_INPUT_SET VALUES(3,5)
INSERT INTO INPUT_SET VALUES(1,'testInputSet1','basic set of inputs',1)
INSERT INTO INPUT_SET VALUES(2,'testInputSet2','set to test delete',2)
INSERT INTO INPUT_SET VALUES(3,'testInputSet3','set to test update',2)
INSERT INTO INPUT_SET VALUES(4,'testInputSet4','set to add inputs',2)
INSERT INTO INPUT_SET VALUES(5,'testInputSet5','dependent on problem',4)
INSERT INTO INPUT_SET VALUES(6,'bcInputSet','testovaci',5)
INSERT INTO INPUT_INPUT_SET VALUES(1,1)
INSERT INTO INPUT_INPUT_SET VALUES(2,1)
INSERT INTO INPUT_INPUT_SET VALUES(2,3)
INSERT INTO INPUT_INPUT_SET VALUES(3,2)
INSERT INTO INPUT_INPUT_SET VALUES(5,6)
INSERT INTO EXPERIMENT_FARM VALUES(1,1)
INSERT INTO EXPERIMENT_FARM VALUES(2,4)
