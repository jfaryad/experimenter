SEQ_INPUT_SET(OPT,HSQLDB)=call next value for SEQ_INPUT_SET;

GET_INPUT_SET_BY_ID(CRUD)=
  select 
  	i.input_set_id @id, i.name @name, i.description @description, 
	prob.problem_id @problem.id^int^id, prob.name @problem.name, prob.description @problem.description
  from input_set i
  inner join problem prob
  	on i.problem_id = prob.problem_id
  {= where i.input_set_id = :integer^int^notnull}
;

GET_INPUT_SET_BY_CRITERIA(QRY)=
  select 
  	i.input_set_id @id, i.name @name, i.description @description, 
	prob.problem_id @problem.id^int^id, prob.name @problem.name, prob.description @problem.description
  from input_set i
  inner join problem prob
  	on i.problem_id = prob.problem_id
  {= where 
  	{& i.input_set_id = :id}
  	{& UPPER(i.name) like :+name}
  	{& UPPER(i.description) like :+description}
  	{& i.problem_id = :problem.id}
  }
;

FIND_INPUT_SET_BY_EXPERIMENT(QRY)=
  select 
  	i.input_set_id @id, i.name @name, i.description @description, 
	prob.problem_id @problem.id^int^id, prob.name @problem.name, prob.description @problem.description
  from input_set i
  inner join experiment_input_set eis
  	on i.input_set_id = eis.input_set_id
  inner join problem prob
  	on i.problem_id = prob.problem_id
  {= where eis.experiment_id = :integer^int^notnull}
;

FIND_INPUT_SET_BY_INPUT(QRY)=
  select 
  	i.input_set_id @id, i.name @name, i.description @description, 
	prob.problem_id @problem.id^int^id, prob.name @problem.name, prob.description @problem.description
  from input_set i
  inner join input_input_set iis
  	on i.input_set_id = iis.input_set_id
  inner join problem prob
  	on i.problem_id = prob.problem_id
  {= where iis.input_id = :integer^int^notnull}
;

FIND_INPUT_SET_BY_PROJECT(QRY)=
  select 
  	i.input_set_id @id, i.name @name, i.description @description, 
	prob.problem_id @problem.id^int^id, prob.name @problem.name, prob.description @problem.description
  from input_set i
  inner join project_input_set pis
  	on i.input_set_id = pis.input_set_id
  inner join problem prob
  	on i.problem_id = prob.problem_id
  {= where is.project_id = :integer^int^notnull}
;

INSERT_INPUT_SET(CRUD)=
  insert into input_set (input_set_id, name, description, problem_id)
  {= values (:id^int^seq=SEQ_INPUT_SET, :name, :description, :problem.id) }
;

DELETE_INPUT_SET_BY_ID(CRUD)=
  delete from input_set i
  {= where input_set_id = :integer^int^notnull}
;

UPDATE_INPUT_SET(CRUD)=
  update input_set 
  {=set name=:name, description=:description}
  {= where input_set_id = :id^int^notnull}
;
