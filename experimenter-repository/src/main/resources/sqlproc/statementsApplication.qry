SEQ_APPLICATION(OPT,HSQLDB)=call next value for SEQ_APPLICATION;

GET_APPLICATION_BY_ID(CRUD)=
  select 
  	application_id @applicationId, version @version, executable @executable, 
  	program_id @program.programId^int^id, p.name @program.name, p.description @program.description, p.command @program.command,
	proj.project_id @program.project.projectId^int^id, proj.name @program.project.name, proj.description @program.project.description, 
  	ug.usergroup_id @program.project.userGroup.userGroupId^int^id, ug.name @program.project.userGroup.name,
  	prob.problem_id @program.project.problem.problemId^int^id, prob.name @program.project.problem.name, prob.description @program.project.problem.description
  from application a
  innner join program p
  	on a.program_id = p.program_id
  inner join project proj 
  	on p.project_id = proj.project_id 
  inner join user_group ug 
  	on proj.user_group_id = ug.user_group_id 
  inner join problem prob
  	on proj.problem_id = prob.problem_id  
  {= where a.application_id = :integer^int^notnull}
;

GET_APPLICATION_BY_CRITERIA(QRY)=
  select 
  	application_id @applicationId, version @version, executable @executable, 
  	program_id @program.programId^int^id, p.name @program.name, p.description @program.description, p.command @program.command,
	proj.project_id @program.project.projectId^int^id, proj.name @program.project.name, proj.description @program.project.description, 
  	ug.usergroup_id @program.project.userGroup.userGroupId^int^id, ug.name @program.project.userGroup.name,
  	prob.problem_id @program.project.problem.problemId^int^id, prob.name @program.project.problem.name, prob.description @program.project.problem.description
  from application a
  innner join program p
  	on a.program_id = p.program_id
  inner join project proj 
  	on p.project_id = proj.project_id 
  inner join user_group ug 
  	on proj.user_group_id = ug.user_group_id 
  inner join problem prob
  	on proj.problem_id = prob.problem_id
  {= where 
  	{& a.application_id = :applicationId}
  	{& a.version = :+version}
  	{& UPPER(a.executable) like :+executable}
  }
;

INSERT_APPLICATION(CRUD)=
  insert into application (application_id, version, executable, program_id)
  {= values (:applicationId^int^seq=SEQ_APPLICATION, :version, :executable, :program.programId) }
;

DELETE_APPLICATION_BY_ID(CRUD)=
  delete from application a
  {= where application_id = :integer^int^notnull}
;

UPDATE_APPLICATION(CRUD)=
  update application 
  {=set version=:version, executable=:executable}
  {= where application_id = :applicationId^int^notnull}
;
